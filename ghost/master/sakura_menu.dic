SakuraMenuGreetings : nonoverlap
{
	"Snail."
}

//Because there is an all modifier here, you don't need to write -- between menu options
OnSakuraMenu : all
{
	"\0\s[0]\b2\![set,autoscroll,disable]"
	if SHIORI3FW.Eventid == "OnMouseDoubleClick"; SakuraMenuGreetings //The check here is so they won't comment if you click the back button. Remove if you prefer
	
	"\n\n\_q"
	
	"\![*]\q[Talk to me,OnAiTalk]"
	if LastTalk != ""; "  \![*]\q[Say that again,OnLastTalk]"
	"\n\n"
	
	"\![*]\q[Change loadout,OnEquipMenu,bodypaint]\n\n"
	
	"\![*]\q[See racer ID,OnRacerID]\n\n"
	
	"\![*]\q[Change talk rate,OnTalkRateMenu]\n\n"
	
	if SHIORI3FW.DebugMode
	{
		"\![*]\q[Change snails,OnDebug.SnailPicker]\n\n"
	}
	
	"\![*]\q[Nevermind,blank]"	
}

OnLastTalk
{
	LastTalk
}

OnEquipMenu : all
{
	if EquipFilter == ""; EquipFilter = "Both"
	_category = reference0
	if _category == ""; _category = "bodypaint"
	
	_stats = CurrentStats
	_speed = _stats[0]
	_coolness = _stats[1]
	_explosiveness = _stats[2]
	_cost = _stats[3]
	_count = _stats[4]
	
	
	"\C\![lock,balloonrepaint]\c\![set,autoscroll,disable]\0\b[2]\t\*\![no-autopause]\_q"
	"\f[bold,1]\f[italic,1]\f[align,center]\f[height,+2]EQUIP YOUR SNAIL!\n\f[height,default]\f[align,left]\f[italic,default]\f[bold,default]\n"
	
	"Current funds: %(L)%(Lettuce)\n\n"
	"Speed: %(_speed)\n"
	"Coolness: %(_coolness)\n"
	"Explosiveness: %(_explosiveness)\n"
	"\n"
	
	
	_s = ""; if _count != 1; _s = "s"
	if _cost > 0
	{
		switch _cost > Lettuce
		{
			"\![*]\__q[OnEquipMenu.Save,%(_cost)]Purchase %(_count) item%(_s) for %(L)%(_cost)\__q"
			"\![*]\f[color,disable]Purchase %(_count) item%(_s) for %(L)%(_cost)\f[color,default]"
		}
	}
	else; "\![*]\__q[OnEquipMenu.Save,0]Save\__q"
	"\n\n"
	"\![*]\__q[OnEquipMenu.Revert]Cancel\__q"
	
	"\![unlock,balloonrepaint]"
	
	"\1\b[2]\![lock,balloonrepaint]\c"
	_filters = ("All","Purchased","Unpurchased")
	"Showing: "
	foreach _filters; _filter
	{
		switch EquipFilter == _filter
		{
			"\f[color,disable]\__q[OnToggleEquipFilter,%(reference0),%(_filter)]%(_filter)\__q\f[color,default]  "
			"\__q[OnToggleEquipFilter,%(reference0),%(_filter)]%(_filter)\__q  "
		}
	}
	"\n"
	"Category:  "
	foreach Dressups.Categories; _cat
	{
		switch _cat == _category
		{
			"\f[color,disable]\__q[OnEquipMenu,%(_cat)]%(_cat)\__q\f[color,default]  "
			"\__q[OnEquipMenu,%(_cat)]%(_cat)\__q  "
		}
	}
	"\n\n"
	
	foreach ItemDetails; _item
	{
		_purchased = IsOwned(_item[0],_item[1])
		if EquipFilter == "Purchased" && !_purchased; continue
		elseif EquipFilter == "Unpurchased" && _purchased; continue
		
		//Category,Name,Unlocked,Price,Speed,Coolness,Explosiveness
		if _item[0] == _category && (_item[2] == "1" || _purchased)
		{
			_choice = "\__q[OnEquipMenu.ToggleItem,""%(_item[0])"",""%(_item[1])""]%(_item[1])\__q"
			
			if ASEARCH("%(_item[0]),%(_item[1])",Dressups.Current) != -1; "\![*]"
			
			// switch _purchased
			// {
				// "\f[color,disable]%(_choice) %(L)%(_item[3])\f[color,default]"
				// "%(_choice)"
			// }
			switch _purchased
			{
				"\__q[OnEquipMenu.ToggleItem,""%(_item[0])"",""%(_item[1])""]%(_item[1])\__q %(L)%(_item[3])"
				"\_a[OnEquipMenu.ToggleItem,""%(_item[0])"",""%(_item[1])""]%(_item[1])\_a"
			}
			"\n"
		}
	}
	"\n"
	"\![unlock,balloonrepaint]\0"
}

OnToggleEquipFilter
{
	EquipFilter = reference1
	// if EquipFilter == "All"; EquipFilter = "Purchased"
	// elseif EquipFilter == "Purchased"; EquipFilter = "Unpurchased"
	// else; EquipFilter = "All"
	"\C\![raise,OnEquipMenu,%(reference0)]"
}

OnEquipMenu.ToggleItem : all
{
	"\C\![set,autoscroll,disable]\0\_q\![bind,""%(reference0)"",""%(reference1)""]\![raise,OnEquipMenu,""%(reference0)""]"
}

OnEquipMenu.Save : all
{
	Lettuce -= TOINT(reference0)
	
	foreach Dressups.Current; _dressup
	{
		if !IsOwned(_dressup[0],_dressup[1])
		{
			foreach ItemDetails; _item
			{
				if _item[0] == _dressup[0] && _item[1] == _dressup[1]
				{
					PurchasedItems ,= "%(_item[0]),%(_item[1])"
				}
			}
		}
	}
	
	//TODO legality check
	CurrentSnail.Loadout = Dressups.Current
	OnSakuraMenu
}

OnEquipMenu.Revert : all
{
	"\0"
	RefreshDressups
}

RefreshDressups : all
{
	LOGGING("====================================================================")
	foreach Dressups.Current; _dressup
	{
		"\![bind,%(_dressup[0]),%(_dressup[1]),0]"
	}
	foreach CurrentSnail.Loadout; _dressup
	{
		"\![bind,%(_dressup[0]),%(_dressup[1]),1]"
	}
	_coolness = TOINT(CurrentStats[1])
	LOGGING("_coolness: %(_coolness)")
	if _coolness > HighestAllTimeCoolness; HighestAllTimeCoolness = _coolness
	if _coolness > CurrentSnail.HighestCoolness; CurrentSnail.HighestCoolness = _coolness
}

OnRacerID : all
{
	_id = CurrentSnail.ID[1,":"]
	_racer_num = "%(SUBSTR(_id,0,4))-%(SUBSTR(_id,4,4))-%(SUBSTR(_id,8,4))-%(SUBSTR(_id,12,4))"
	
	_path = "id_photo/%(CurrentSnail.Name)-%(CurrentSnail.ID[1,':'])_0.png"
	if FATTRIB(_path) == -1; _path = "../../shell/master/surface0.png"
	
	_spacing = "\n"
	_coords = "inline"
	if SHIORI3FW.BalloonName == "Very Fast Speedway"
	{
		_spacing = "\n\_l[100,]"
		_coords = "0,55"
	}
	
	"\0\b[2]\_q\![set,autoscroll,disable]"
	"\f[bold,1]\f[italic,1]\f[align,center]\f[height,+2]%(TOUPPER(CurrentSnail.Name))\n\f[height,default]\f[align,left]\f[italic,default]\f[bold,default]\n"
	"\_b[%(_path),%(_coords),--clipping=240 125 370 255,--option=background]"
	if SHIORI3FW.BalloonName == "Very Fast Speedway"; "\n[-200]"
	else; "\n"
	"%(_spacing)Racer #%(_racer_num)"
	"%(_spacing)Sponsored on %(CurrentSnail.DateSponsored[0,':'])"
	"%(_spacing)Total races: %(CurrentSnail.TotalRaces)"
	"%(_spacing)Total racing time: %(TimeDisplay(CurrentSnail.TotalRaceTime))"
	"%(_spacing)Total crashes: %(CurrentSnail.TotalCrashes)"
	"%(_spacing)Highest coolness: %(CurrentSnail.HighestCoolness)"
	"\n\n\n"
	"\f[italic,1]""%(CurrentSnail.Trait)""\f[italic,default]"
	"\n\n"
	"\![*]\__q[OnTakeRacerPhoto.Confirm]Take a new ID photo\__q"
	"\x\![raise,OnSakuraMenu]"
}

OnTakeRacerPhoto.Confirm : all
{
	"\0\b[0]\_q"
	"Take a new photo for %(CurrentSnail.Name)'s racer ID?\n\n"
	"Cost: %(L)10\n"
	"Current funds: %(L)%(Lettuce)\n\n"
	
	"\![*]"
	switch Lettuce >= 10
	{
		"\f[color,disable]Yes (%(L)10)\f[color,default]"
		"\__q[OnTakeRacerPhoto]Yes (%(L)10)\__q"
	}
	"  "
	"\![*]\__q[OnRacerID]No\__q"
}

OnTakeRacerPhoto : all
{
	Lettuce -= 10
	_path = "id_photo/%(CurrentSnail.Name)-%(CurrentSnail.ID[1,':'])_0.png"
	"\0\b[2]"
	"\![execute,dumpsurface,id_photo,0,0,%(CurrentSnail.Name)-%(CurrentSnail.ID[1,':'])_,,1]"
	"Say cheese!\_w[1000]\n.\w8 .\w8 .\_w[1500]\n\_b[%(_path),inline,--clipping=240 125 370 255,--option=background]\n\nPerfect!\x\![raise,OnRacerID]"
}

OnTalkRateMenu : all
{	
	//This is just setting up a label, you may need to add to it or tweak it if you change what rates are available
	_talkrate = "Off"
	if aitalkinterval == 30; _talkrate = "30 seconds"
	elseif aitalkinterval == 60; _talkrate = "1 minute"
	elseif aitalkinterval == 180; _talkrate = "3 minutes"
	elseif aitalkinterval == 300; _talkrate = "5 minutes"
	elseif aitalkinterval == 600; _talkrate = "10 minutes"
	
	"\0\s[0]\b2\![set,autoscroll,disable]\_q"
	"Current interval: %(_talkrate)\n\n"
	
	"\![*]\q[Off,OnTalkRateChange,0]\n"
	"\![*]\q[30 seconds,OnTalkRateChange,30]\n"
	"\![*]\q[1 minute,OnTalkRateChange,60]\n"
	"\![*]\q[3 minutes,OnTalkRateChange,180]\n"
	"\![*]\q[5 minutes,OnTalkRateChange,300]\n"
	"\![*]\q[10 minutes,OnTalkRateChange,600]\n"
	"\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
}

OnTalkRateChange
{
	aitalkinterval = TOINT(reference0)
}

OnDebug.SnailPicker : all
{
	"\0\b[2]\_q\![no-autopause]"
	for _i = 0; _i < ARRAYSIZE(SavedSnails.ID); _i++
	{
		if SavedSnails.ID[_i] == CurrentSnail.ID; "\![*]"
		"\__q[OnDebug.SnailPicker.Select,""%(SavedSnails.ID[_i])""]%(SavedSnails.Name[_i])\__q\n"
	}
	"\n\![*]\q[See snail stats,OnDebug.CurrentSnail]"
	"\n\n\![*]\q[Add a snail,OnFirst.SnailPick]"
	
	"\n\n\![*]\q[Back,OnSakuraMenu]"
}

OnDebug.SnailPicker.Select
{
	SaveSnail(CurrentSnail.ID)
	LOGGING("SAVING %(CurrentSnail.ID) %(CurrentSnail.Name)")
	LoadSnail(reference0)
	LOGGING("LOADING %(CurrentSnail.ID) %(CurrentSnail.Name)")
	
	"\C%(RefreshDressups)\![raise,OnDebug.SnailPicker]"
}

OnDebug.CurrentSnail : all
{
	"\0\b[2]\_q"
	"I am a snail\n"
	"My ID is %(CurrentSnail.ID)\n"
	"My name is %(CurrentSnail.Name)\n"
	"I was made in version %(CurrentSnail.Version)\n"
	"My trait is \f[italic,1]""%(CurrentSnail.Trait)""\f[italic,default]\n"
	"I've run in %(CurrentSnail.TotalRaces) races\n"
	"My total time on the track is %(CurrentSnail.TotalRaceTime)\n"
	"My highest cool score ever is %(CurrentSnail.HighestCoolness)\n"
	"My current loadout is %(CurrentSnail.Loadout)\n"
	"I was sponsored on %(CurrentSnail.DateSponsored)\n"
	"\n\![*]\q[Back,OnDebug.SnailPicker]  \![*]\q[Done,OnBlank]"
}