OnSakuraMenu : all
{
	"\0\s[0]\b2\![set,autoscroll,disable]\_q"
	CleanlinessCheck
	"\![set,alpha,100]\![embed,OnCorrectMoonwalk]%(spongeoff)"
	"%(bigheader('INTERACT WITH YOUR SNAIL!'))"
	
	"\![*]\__q[OnAiTalk.Prompt,Radio]Listen to the radio\__q"
	"\n"
	"\![*]\__q[OnAiTalk.Prompt,%(ANY('Snail,Poem,User'))]Talk with your snail\__q" //TODO should this include poems or no...?
	"\n"
	if LastTalk != ""; "\![*]\q[Repeat,OnLastTalk]"
	else; "\n"
	"\n\n"
	
	"\![*]\q[Garage,OnEquipMenu,Body Paint]  \![*]\q[Racer ID,OnRacerID,%(CurrentSnail.ID),""%(CurrentSnail.Name)"",OnSakuraMenu]\n"
	"\![*]\q[Snail Training,OnSnailTraining]  \![*]\q[Snail Wash,OnSnailWashMenu]\n"
	"\![*]\q[Photo Gallery,OnPhotoGallery]\n"
	"\n"
	
	"\![*]\q[Lettuce Shop,OnLettuceShop]\n\n"
	
	"\![*]\q[Settings,OnSettings]\n\n"
	
	if SHIORI3FW.DebugMode
	{
		"\f[color,disable]"
		"\![*]\q[Change snails,OnDebug.SnailPicker]  \![*]\q[Race test,OnRace.Start]\n"
		"\![*]\q[Temp leaderboard,OnTempLeaderboard]\n"
		"\n"
		"\f[color,default]"
	}
	
	"\![*]\q[Nevermind,blank]"	
}

OnAiTalk.Prompt
{
	OnAiTalk(reference0)
}

OnLastTalk
{
	LastTalk
}

OnEquipMenu : all
{
	if EquipFilter == ""; EquipFilter = "Both"
	_category = reference0
	if _category == ""; _category = "Body Paint"
	
	EquipMenu.ShopControls
	
	"\p[2]\b[4]\![lock,balloonrepaint]\c\f[anchorvisitedfontcolor,default.anchor]\![set,autoscroll,disable]"
	_filters = ("All","Purchased","Unpurchased")
	"Showing: "
	foreach _filters; _filter
	{
		switch EquipFilter == _filter
		{
			"\f[color,disable]\__q[OnToggleEquipFilter,%(reference0),%(_filter)]%(_filter)\__q\f[color,default]  "
			"\__q[OnToggleEquipFilter,%(reference0),%(_filter)]%(_filter)\__q  "
		}
	}
	"\n"
	"Category:  "
	foreach Dressups.Categories; _cat
	{
		if _cat == "Overlays"; continue
		switch _cat == _category
		{
			"\f[color,disable]\__q[OnEquipMenu,%(_cat)]%(_cat)\__q\f[color,default]  "
			"\__q[OnEquipMenu,%(_cat)]%(_cat)\__q  "
		}
	}
	"\n\n"
	
	foreach ItemDetails; _item
	{
		_purchased = IsOwned(_item[0],_item[1])
		if EquipFilter == "Purchased" && !_purchased; continue
		elseif EquipFilter == "Unpurchased" && _purchased; continue
		
		//Category,Name,Unlocked,Price,Speed,Coolness,Explosiveness
		if _item[0] == _category && (_item[2] == "1" || _purchased)
		{
			_choice = "\__q[OnEquipMenu.ToggleItem,""%(_item[0])"",""%(_item[1])""]%(_item[1])\__q"
			
			if ASEARCH("%(_item[0]),%(_item[1])",Dressups.Current) != -1; "\![*]"
			
			// switch _purchased
			// {
				// "\f[color,disable]%(_choice) %(L)%(_item[3])\f[color,default]"
				// "%(_choice)"
			// }
			switch _purchased
			{
				"\__q[OnEquipMenu.ToggleItem,""%(_item[0])"",""%(_item[1])""]%(_item[1])\__q %(L)%(_item[3])"
				"\_a[OnEquipMenu.ToggleItem,""%(_item[0])"",""%(_item[1])""]%(_item[1])\_a"
			}
			"\n"
		}
	}
	"\n"
	"\![unlock,balloonrepaint]\0"
}

EquipMenu.ShopControls : all
{
	_stats = CurrentStats
	_speed = _stats[0]
	_coolness = _stats[1]
	_explosiveness = _stats[2]
	_cost = _stats[3]
	_count = _stats[4]
	
	_diff = CurrentStats("loadout")
	_speeddiff = _speed - _diff[0]
	_coolnessdiff = _coolness - _diff[1]
	_explosivenessdiff = _explosiveness - _diff[2]
	
	"\C\![lock,balloonrepaint]\c\![set,autoscroll,disable]\f[anchorvisitedfontcolor,default.anchor]\0\b[2]\t\*\![no-autopause]\_q"
	"%(bigheader('EQUIP YOUR SNAIL!'))[half]" //the half is on purpose do not touch
	
	
	"Current funds: %(L)%(Lettuce)\n\n"
	"Speed: \f[bold,1]%(_speed)\f[bold,default]"
	if _speeddiff != 0
	{
		" \f[color,disable]("
		if _speeddiff > 0; "+"
		_speeddiff
		")\f[color,default]"
	}
	"\n"
	"Coolness: \f[bold,1]%(_coolness)\f[bold,default]"
	if _coolnessdiff != 0
	{
		" \f[color,disable]("
		if _coolnessdiff > 0; "+"
		_coolnessdiff
		")\f[color,default]"
	}
	"\n"
	"Explosiveness: \f[bold,1]%(_explosiveness)\f[bold,default]"
	if _explosivenessdiff != 0
	{
		" \f[color,disable]("
		if _explosivenessdiff > 0; "+"
		_explosivenessdiff
		")\f[color,default]"
	}
	"\n"
	"\n"
	
	//ErrorLog("%(_argv)","info")
	if _argv[0] != "" //hovering over a choice
	{
		foreach ItemDetails; _item
		{
			if _item[0] == _argv[0] && _item[1] == _argv[1]
			{
				//Category,Name,Unlocked,Price,Speed,Coolness,Explosiveness
				_stats = ""
				
				foreach ("%(_item[4]),Speed","%(_item[5]),Coolness","%(_item[6]),Explosiveness"); _stat
				{
					if _stat[0] != "0"
					{
						if _stats != ""; _stats += ", "
						if "-" !_in_ _stat[0]; _stats += "+"
						_stats += _stat[0]
						_stats += " %(_stat[1])"
					}
				}
				
				"%(_item[1]):\n"
				if _stats == ""; "No stats"
				else; _stats
				
				//"%(_item[1]):\n%(_item[4]) Speed, %(_item[5]) Coolness, %(_item[6]) Explosiveness"
				break
			}
		}
	}
	else; "\n"
	"\n\n"
	
	_s = ""; if _count != 1; _s = "s"
	if _cost > 0
	{
		switch _cost > Lettuce
		{
			"\![*]\__q[OnEquipMenu.Save,%(_cost)]Purchase %(_count) item%(_s) for %(L)%(_cost)\__q"
			"\![*]\f[color,disable]Purchase %(_count) item%(_s) for %(L)%(_cost)\f[color,default]"
		}
	}
	else; "\![*]\__q[OnEquipMenu.Save,0]Save\__q"
	"\n\n"
	"\![*]\__q[OnEquipMenu.Revert]Cancel\__q"
	
	//surely there's a better place...
	"\![set,scaling,%(Moonwalk)100,100]"
	
	"\![unlock,balloonrepaint]"
}

OnToggleEquipFilter
{
	EquipFilter = reference1
	// if EquipFilter == "All"; EquipFilter = "Purchased"
	// elseif EquipFilter == "Purchased"; EquipFilter = "Unpurchased"
	// else; EquipFilter = "All"
	"\C\![raise,OnEquipMenu,%(reference0)]"
}

OnEquipMenu.ToggleItem : all
{
	"\C\![set,autoscroll,disable]\0\s[0]\_q\![bind,""%(reference0)"",""%(reference1)""]\![raise,OnEquipMenu,""%(reference0)""]"
}

OnEquipMenu.Save : all
{
	Lettuce -= TOINT(reference0)
	
	foreach Dressups.Current; _dressup
	{
		if !IsOwned(_dressup[0],_dressup[1])
		{
			foreach ItemDetails; _item
			{
				if _item[0] == _dressup[0] && _item[1] == _dressup[1]
				{
					PurchasedItems ,= "%(_item[0]),%(_item[1])"
				}
			}
		}
	}
	
	CurrentSnail.Loadout = Dressups.Current
	OnSakuraMenu
}

OnEquipMenu.Revert : all
{
	"\C\0"
	RefreshDressups
	"\_q \![embed,OnCorrectMoonwalk]"
	"\![raise,OnSakuraMenu]"
}

OnCorrectMoonwalk
{
	"\![set,scaling,%(Moonwalk)100,100]"
}

RefreshDressups : all
{
	foreach Dressups.Current; _dressup
	{
		"\![bind,%(_dressup[0]),%(_dressup[1]),0]"
	}
	foreach CurrentSnail.Loadout; _dressup
	{
		"\![bind,%(_dressup[0]),%(_dressup[1]),1]"
	}
	_coolness = TOINT(CurrentStats[1])
	if _coolness > HighestAllTimeCoolness; HighestAllTimeCoolness = _coolness
	if _coolness > CurrentSnail.HighestCoolness; CurrentSnail.HighestCoolness = _coolness
}

OnRacerID : all
{
	_fullID = reference0
	_name = reference1
	_frommenu = reference2
	
	_index = ASEARCH(_fullID,SavedSnails.ID)
	
	_id = _fullID[1,':']
	_racer_num = "%(SUBSTR(_id,0,4))-%(SUBSTR(_id,4,4))-%(SUBSTR(_id,8,4))-%(SUBSTR(_id,12,4))"
	
	_path = "id_photo/%(_name)-%(_id)_0.png"
	if FATTRIB(_path) == -1; _path = "../../shell/master/surface0.png"
	
	_spacing = "\n"
	_coords = "inline"
	if SHIORI3FW.BalloonName == "Very Fast Speedway"
	{
		_spacing = "\n\_l[110,]"
		_coords = "0,55"
	}
	
	"\0\b[2]\_q\![set,autoscroll,disable]\![no-autopause]"
	"%(bigheader(TOUPPER(_name)))"
	"\_b[%(_path),%(_coords),--clipping=240 125 370 255,--option=background]"
	if SHIORI3FW.BalloonName == "Very Fast Speedway"; "\n[-200]"
	else; "\n"
	"%(_spacing)Racer #%(_racer_num)"
	"%(_spacing)Sponsored on %(SavedSnails.DateSponsored[_index][0,':'])"
	"%(_spacing)Total races: %(SavedSnails.TotalRaces[_index])"
	"%(_spacing)Total racing time: %(TimeDisplay(SavedSnails.TotalRaceTime[_index]))"
	"%(_spacing)Total crashes: %(SavedSnails.TotalCrashes[_index])"
	"%(_spacing)Highest coolness: %(SavedSnails.HighestCoolness[_index])"
	"\n\n\n"
	"\f[italic,1]""%(SavedSnails.Trait[_index])""\f[italic,default]"
	"\n\n"
	"Notable achievements:\n"
	foreach SavedSnails.Notes[_index]; _note
	{
		"\![*]%(_note)\n"
	}
	"\n"
	
	//CAN ONLY TAKE PHOTO IF CURRENT SNAIL. Otherwise it'll take a picture of the wrong one lol
	if _frommenu == "OnPhotoGallery"
	{
		switch _fullID == CurrentSnail.ID
		{
			"\![*]\__q[OnPhotoGallery.SwitchSnail,%(_fullID),""%(_name)"",%(_frommenu)]Switch to this snail\__q"
			"\![*]\f[color,disable]Switch to this snail\f[color,default]"
		}
	}
	else //OnSakuraMenu, hopefully
	{
		"\![*]\__q[OnTakeRacerPhoto.Confirm,%(_fullID),""%(_name)"",%(_frommenu)]Take a new ID photo\__q"
	}
	"\n\n"
	if _frommenu == ""; _frommenu = "OnSakuraMenu"
	"\![*]\q[Back,%(_frommenu)]  \![*]\q[Done,OnBlank]"
}

OnTakeRacerPhoto.Confirm : all
{
	_fullID = reference0
	_name = reference1
	_frommenu = reference2
	
	"\0\b[0]\_q"
	"Take a new photo for %(CurrentSnail.Name)'s racer ID?\n\n"
	"Cost: %(L)10\n"
	"Current funds: %(L)%(Lettuce)\n\n"
	
	"\![*]"
	switch Lettuce >= 10
	{
		"\f[color,disable]Yes (%(L)10)\f[color,default]"
		"\__q[OnTakeRacerPhoto,%(_fullID),""%(_name)"",%(_frommenu)]Yes (%(L)10)\__q"
	}
	"  "
	"\![*]\__q[OnRacerID,%(_fullID),""%(_name)"",%(_frommenu)]No\__q"
}

OnTakeRacerPhoto : all
{
	_fullID = reference0
	_name = reference1
	_frommenu = reference2
	
	Lettuce -= 10
	_path = "id_photo/%(CurrentSnail.Name)-%(CurrentSnail.ID[1,':'])_0.png"
	"\0\b[2]"
	"\![execute,dumpsurface,id_photo,0,0,%(CurrentSnail.Name)-%(CurrentSnail.ID[1,':'])_,,1]"
	"Say cheese!\_w[1000]\n.\w8 .\w8 .\_w[1500]\n\_b[%(_path),inline,--clipping=240 125 370 255,--option=background]\n\nPerfect!\x\![raise,OnRacerID,%(_fullID),""%(_name)"",%(_frommenu)]"
}

OnSnailTraining : all
{
	"\0\b[2]\_q\![set,autoscroll,disable]"
	"%(bigheader('TRAIN YOUR SNAIL!'))"
	
	"Current funds: %(L)%(Lettuce)\n\n"
	
	"%(CurrentSnail.Name)'s base stats:\n\n"
	
	//"\![*]\__q[OnSnailTraining.Speed]Speed: %(CurrentSnail.Training[0])\f[cursorstyle,none]\f[cursorfontcolor,000,040,015]\f[cursornotselectfontcolor,159,130,128] (Cost)\f[cursorfontcolor,default]\f[cursornotselectfontcolor,default]\f[cursorstyle,underline]\__q\n"
	//"\__q[OnSnailTraining.Coolness]Coolness: %(CurrentSnail.Training[1])\f[cursorstyle,none]\f[cursorfontcolor,000,040,015]\f[cursornotselectfontcolor,159,130,128] (Cost)\f[cursorfontcolor,default]\f[cursornotselectfontcolor,default]\f[cursorstyle,underline]\__q\n"
	
	_stats_to_train = ("Agility","Style","Fire safety","Strength","Shrewdness")
	
	_i = 0
	foreach _stats_to_train; _stat
	{
		"%(_stat): %(CurrentSnail.Training[_i])%(newline)\f[align,right]\![*]"
		_cost = TrainingCost(CurrentSnail.Training[0])
		switch Lettuce >= _cost
		{
			"\f[color,disable](Train for %(L)%(_cost))\f[color,default]"
			"\__q[OnSnailTraining.Confirm,%(_i)](Train for %(L)%(_cost))\__q"
		}
		"\n\f[align,left]"
		
		_i++
	}
	
	"\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Done,OnBlank]"
}

OnSnailTraining.Confirm : all
{
	_stats_to_train = ("Agility","Style","Fire safety","Strength","Shrewdness")
	_stat = _stats_to_train[reference0]
	_cost = TrainingCost(CurrentSnail.Training[reference0])
	_time = TrainingTime(CurrentSnail.Training[reference0])
	
	"\0\b[2]\_q\![set,autoscroll,disable]"
	
	"Train %(CurrentSnail.Name) in %(_stat) for %(_cost)?\n\n"
	"This will take %(TimeDisplayWord(_time)) and bring its %(TOLOWER(_stat)) to %(CurrentSnail.Training[reference0] + 1)."
	
	"\n\n"
	"\![*]\q[Yes,OnSnailTraining.Start,%(reference0),%(_cost),%(_time)]  \![*]\q[Back,OnSnailTraining]"
}

OnSnailTraining.Start : all
{
	SnailTrainingTimer[0] = GETSECCOUNT
	SnailTrainingTimer[1] = reference2
	Lettuce -= _cost
	
	"Training start!"
}

OnSnailWashMenu : all
{
	"\C\![lock,balloonrepaint]\c"
	CleanlinessCheck
	"\0\b[2]\_q\![set,autoscroll,disable]"
	"\*"
	if CurrentSnail.Cleanliness >= 5 && _argv[0] == "stroked"; "\s[3]"
	else; "\s[0]"
	
	if SpongePurchased.Better; spongebetter
	elseif SpongePurchased.Basic; spongebasic
	else; spongeoff
	
	"%(bigheader('WASH YOUR SNAIL!'))"
	
	"Cleanliness: %(CurrentSnail.Cleanliness)\n\n"
	
	"\![*]"
	switch Lettuce >= 100 //TODO would it be funny if this increased based on soot levels... maybe...
	{
		"Automatic wash (%(L)100)"
		"\q[Automatic wash,OnSnailWash.Automatic] (%(L)100)"
	}
	"\n\n"
	
	
	"\![*]"
	switch SpongePurchased.Basic
	{
		switch Lettuce >= 1000
		{
			"\f[color,disable]Purchase sponge (%(L)1000)\f[color,default]"
			"\q[Purchase sponge,OnSnailWash.Sponge,1000,basic sponge] (%(L)1000)"
		}
		"\f[color,disable]Sponge purchased\f[color,default]"
	}
	"\n"
	"\![*]"
	if SpongePurchased.Basic
	{
		switch SpongePurchased.Better
		{
			switch Lettuce >= 10000
			{
				"\f[color,disable]Purchase better sponge (%(L)10000)\f[color,default]"
				"\q[Purchase better sponge,OnSnailWash.Sponge,10000,better sponge] (%(L)10000)"
			}
			"\f[color,disable]Better sponge purchased\f[color,default]"
		}
	}
	"\n\n"
	"Current funds: %(L)%(Lettuce)\n\n"
	
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Done,OnSnailWash.Done]"
	"\![unlock,balloonrepaint]"
	"\e __SNAIL_WASH_MENU__"
}

OnSnailWash.Automatic : all
{
	CurrentSnail.Cleanliness = 10
	
	"\0\b[2]\_q\![set,autoscroll,disable]\![no-autopause]"
	
	"Have your snail washed once for %(L)100?\n\n"
	
	"\![*]\q[Wash snail,OnSnailWash.AutomaticYes,100]  \![*]\q[Back,OnSnailWashMenu]"
}

OnSnailWash.AutomaticYes : all
{
	Lettuce -= TOINT(reference0)
	CurrentSnail.Cleanliness = 1
	
	"\0\b[2]\_q\![set,autoscroll,disable]\![no-autopause]"
	CleanlinessCheck
	"Squeaky clean!"
	"\n\n"
	"\![*]\q[Menu,OnSakuraMenu]  \![*]\q[Done,OnBlank]"
}

OnSnailWash.Sponge : all
{
	"\0\b[2]\_q\![set,autoscroll,disable]\![no-autopause]"
	
	"Purchase a %(reference1) for %(L)%(reference0)?\n\n"
	"This will allow you to clean soot off your snail manually, as well as polish it up for some extra shine.\n\n"
	
	"\![*]\q[Purchase,OnPurchaseSponge.Yes,%(reference0),%(reference1)]  \![*]\q[Back,OnSnailWashMenu]"
}

OnPurchaseSponge.Yes : all
{
	if reference1 == "basic sponge"; SpongePurchased.Basic = 1
	if reference1 == "better sponge"; SpongePurchased.Better = 1
	
	Lettuce -= TOINT(reference0)
	
	"\0\b[2]\_q\![no-autopause]"
	"Purchased %(reference1) for %(L)%(reference0)!\n\n"
	"Use it by stroking your snail's shell while in the Snail Wash."
	"\x\![raise,OnSnailWashMenu]"
}

OnSnailWash.Done
{
	spongeoff
}

OnPhotoGallery : all
{
	"\0\b[4,--fallback=2]\_q\![set,autoscroll,disable]"
	"%(bigheader('ADMIRE YOUR SNAILS!'))"
	//TODO maybe paginate later? this could get quite bulky
	
	_ii = 0
	_x = 10
	if SHIORI3FW.BalloonName == "Very Fast Speedway"; "\_l[%(_x),]"
	for _i = 0; _i < ARRAYSIZE(SavedSnails.ID); _i++
	{
		_path = "id_photo/%(SavedSnails.Name[_i])-%(SavedSnails.ID[_i][1,':'])_0.png"
		if FATTRIB(_path) == -1; _path = "../../shell/master/surface0.png"
		
		//left up right down
		"\__q[OnRacerID,%(SavedSnails.ID[_i]),""%(SavedSnails.Name[_i])"",OnPhotoGallery]\_b[%(_path),inline,--clipping=250 125 360 255]\__q"
		_ii++
		if _ii >= 3
		{
			_ii = 0
			if SHIORI3FW.BalloonName == "Very Fast Speedway"; "\n\_l[%(_x),]"
		}
		
	}
	
	"\n\n"
	"\![*]\q[Back,OnSakuraMenu]"
}

OnPhotoGallery.SwitchSnail
{
	_fullID = reference0
	_name = reference1
	_frommenu = reference2
	
	SaveSnail(CurrentSnail.ID)
	LoadSnail(reference0)
	
	"\C%(RefreshDressups)%(CleanlinessCheck)\![raise,OnRacerID,%(_fullID),""%(_name)"",%(_frommenu)]"
}

OnLettuceShop : all
{
	"\0\b[2]\_q\![set,autoscroll,disable]"
	"%(bigheader('LETTUCE LOVERS!'))"
	
	"\f[bold,1]\f[italic,1]\f[align,center]\f[color,disable]"
	switch RAND(100) == 0
	{
		"For all your lettuce needs!"
		"Hope you like salad!"
	}
	"\f[color,default]\n\f[align,left]\f[italic,default]\f[bold,default]\n"
	
	"\![*]\__q[OnLettuceExchange]Lettuce exchange\__q\n\n"
	"\![*]\f[strike,1]Lettuce conversion\f[strike,default] Currently unavailable!"
	"\n\n"
	"\![*]\q[Back,OnSakuraMenu]"
}


OnLettuceExchange : all
{
	_money = reference0
	if reference0 == ""; _money = 0
	if _money < 0; _money = 0
	if _money > Lettuce; _money = Lettuce
	
	_fee = TOINT(_money * 0.10)
	if _fee == 0; _fee = 1
	if _money <= 0; _fee = 0
	
	"\C\![lock,balloonrepaint]\c"
	"\0\b[2]\_q\![set,autoscroll,disable]"
	"%(bigheader('LETTUCE EXCHANGE!'))"
	"\f[bold,1]\f[italic,1]\f[align,center]\f[color,disable]Exchange money lettuce for food lettuce!\f[color,default]\n\f[align,left]\f[italic,default]\f[bold,default]\n"
	
	
	"\f[height,+4]"
	switch _money <= Lettuce
	{
		"\f[color,disable]++  +\f[color,default]"
		"\q[++,OnLettuceExchange,%(_money + 10)]  \q[+,OnLettuceExchange,%(_money + 1)] "
	}
	"    "
	switch _money > 0
	{
		"\f[color,disable]-  --\f[color,default]"
		"\q[-,OnLettuceExchange,%(_money - 1)]  \q[--,OnLettuceExchange,%(_money - 10)]"
	}
	"\f[height,default]\n\n"
	"Exchange %(L)%(_money) for %(_money - _fee) food Lettuce\n"
	"\f[height,-2](%(L)%(_fee) exchange fee)\f[height,default]"
	
	"\n\n"
	"Current funds: %(L)%(Lettuce)\n\n"
	
	"\![*]\q[Exchange,OnLettuceExchange.Confirm,%(_fee)]  \![*]\q[Cancel,OnLettuceShop]"
	"\![unlock,balloonrepaint]"
}

OnLettuceExchange.Confirm
{
	Lettuce -= reference0
	if ASEARCH("Well fed",CurrentSnail.Notes); CurrentSnail.Notes ,= "Well fed"
	OnLettuceShop
}

OnLettuceConversion : all
{
	
}

OnSettings : all
{
	"\0\b[2]\![set,autoscroll,disable]\_q\*\f[anchorvisitedfontcolor,default.anchor]\![no-autopause]"
	"%(bigheader('CONFIGURE YOUR SNAIL!'))"
	
	"Talkrate:\n"
	_times = ("Off,0","30s,30","1m,60","3m,180","5m,300","10m,600")
	foreach _times; _time
	{
		switch TOINT(_time[1]) == aitalkinterval
		{
			"\__q[OnTalkRateChange,%(_time[1])]%(_time[0])\__q"
			"\f[underline,1]\_a[OnTalkRateChange,%(_time[1])]%(_time[0])\_a\f[underline,default]"
		}
		"  "
	}
	"\n\n"
	
	"Radio station:\n"
	_stations = IARRAY
	_stations ,= "Off"
	_stations ,= GETFUNCLIST("RadioStation.")
	foreach _stations; _station
	{
		_station = REPLACE(_station,"RadioStation.","")
		switch _station == RadioStation
		{
			"\__q[OnRadioStationChange,%(_station)]%(REPLACE(_station,'_',' '))\__q"
			"\f[underline,1]\_a[OnRadioStationChange,%(_station)]%(REPLACE(_station,'_',' '))\_a\f[underline,default]"
		}
		if _station == "Shopping" && SHIORI3FW.BalloonName == "Very Fast Speedway"; "\n"
		else; "   "
	}
	"\c[char,2]"
	"\n\n"
	
	if RadioStation == "Off"; "\f[color,disable]"
	"Radio scanning:\n"
	_frequencies = ("Off,0","30m,1800","1h,3600","2h,7200","4h,14400","8h,28800","Each boot,-1")
	foreach _frequencies; _frequency
	{
		switch TOINT(_frequency[1]) == RadioScan
		{
			"\__q[OnRadioScanChange,%(_frequency[1])]%(_frequency[0])\__q"
			"\f[underline,1]\_a[OnRadioScanChange,%(_frequency[1])]%(_frequency[0])\_a\f[underline,default]"
		}
		"  "
	}
	"\c[char,2]"
	"\f[color,default]"
	
	"\n\n"
	"\![*]\q[Back,OnSakuraMenu]  \![*]\q[Nevermind,blank]"
}

OnTalkRateChange
{
	aitalkinterval = TOINT(reference0)
	OnSettings
}

OnRadioStationChange : all
{
	RadioStation = reference0
	OnSurfaceRestore
	OnSettings
}

OnRadioScanChange
{
	RadioScan = TOINT(reference0)
	OnSettings
}

OnDebug.SnailPicker : all
{
	"\0\b[2]\_q\![no-autopause]"
	for _i = 0; _i < ARRAYSIZE(SavedSnails.ID); _i++
	{
		if SavedSnails.ID[_i] == CurrentSnail.ID; "\![*]"
		"\__q[OnDebug.SnailPicker.Select,""%(SavedSnails.ID[_i])""]%(SavedSnails.Name[_i])\__q\n"
	}
	"\n\![*]\q[See snail stats,OnDebug.CurrentSnail]"
	"\n\n\![*]\q[Add a snail,OnFirst.SnailPick]"
	
	"\n\n\![*]\q[Back,OnSakuraMenu]"
}

OnDebug.SnailPicker.Select
{
	SaveSnail(CurrentSnail.ID)
	LOGGING("SAVING %(CurrentSnail.ID) %(CurrentSnail.Name)")
	LoadSnail(reference0)
	LOGGING("LOADING %(CurrentSnail.ID) %(CurrentSnail.Name)")
	
	"\C%(RefreshDressups)%(CleanlinessCheck)\![raise,OnDebug.SnailPicker]"
}

OnDebug.CurrentSnail : all
{
	"\0\b[4,--fallback=2]\![no-autopause]\![set,autoscroll,disable]\_q"
	"I am a snail\n"
	"My ID is %(CurrentSnail.ID)\n"
	"My name is %(CurrentSnail.Name)\n"
	"... which %(('isn''t','is')[IsAlliterative(CurrentSnail.Name)]) alliterative\n"
	"I was made in version %(CurrentSnail.Version)\n"
	"I was sponsored on %(CurrentSnail.DateSponsored)\n"
	"My personality type is %(CurrentSnail.PersonalityType)\n"
	"My preferred type of poetry is %(CurrentSnail.PoetryType)\n"
	"My favorite radio station is %(CurrentSnail.RadioPreference)\n"
	"My alternate hobby is %(CurrentSnail.AltHobby)\n"
	"I've run in %(CurrentSnail.TotalRaces) races\n"
	"My total time on the track is %(CurrentSnail.TotalRaceTime)\n"
	"My highest cool score ever is %(CurrentSnail.HighestCoolness)\n"
	"My trait is \f[italic,1]""%(CurrentSnail.Trait)""\f[italic,default]\n"
	"My current loadout is %(CurrentSnail.Loadout)\n"
	"\n"
	"\![*]\q[Back,OnDebug.SnailPicker]  \![*]\q[Done,OnBlank]"
}

OnTempLeaderboard : all
{
	"\0\b[4]\_q\![no-autopause]\![set,autoscroll,disable]"
	
	foreach TempLeaderboard; _record
	{
		if _record == ""; continue
		
		_score = _record[0]
		_name = _record[1]
		_time = _record[2]
		_coolness = _record[3]
		_exploded = TOINT(_record[4])
		_timestamp = _record[5]
		_date = _timestamp[0,':']
		
		_datetimecalc = _timestamp[1,':'] % 86400
		_timeinfo = GETTIME(_datetimecalc)
		
		_explodestring = ""
		if _exploded; _explodestring = "(Exploded)"
		
		"\f[color,default.anchor]%(_score)\f[color,default] - %(_name)\n"
		"\f[color,disable]Time: %(MinutesSeconds(_time / 1000))  Coolness: %(_coolness)  %(_explodestring)\n"
		"Set on %(_date) at %(_timeinfo[4]):%(LeadingDigit(_timeinfo[5])):%(LeadingDigit(_timeinfo[6]))\f[color,default]"
		"\n\n"
	}
}